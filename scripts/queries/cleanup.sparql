PREFIX agrelon: <https://d-nb.info/standards/elementset/agrelon#>
PREFIX crm: <http://www.cidoc-crm.org/cidoc-crm/>
PREFIX gndo: <https://d-nb.info/standards/elementset/gnd#>

# Delete generic relations that are also present in more detail.
DELETE {
  GRAPH <https://resource.jila.zb.uzh.ch/graph/network> {
    ?subject ?predicateGeneric ?object .
  }
} WHERE {
  GRAPH <https://resource.jila.zb.uzh.ch/graph/network> {
    ?subject ?predicateGeneric ?object .
    ?subject ?predicateDetailed ?object .
  }
  ?predicateGeneric owl:equivalentProperty|^owl:equivalentProperty agrelon:hasRelative .
  ?predicateDetailed rdfs:subPropertyOf* agrelon:hasRelative .
};

# Fix birth and death dates of Pietro Barocelli
DELETE {
  GRAPH <https://resource.jila.zb.uzh.ch/graph/external> {
    <https://d-nb.info/gnd/1018674667> gndo:dateOfDeath '1887-12-22' .
  }
} INSERT {
  GRAPH <https://resource.jila.zb.uzh.ch/graph/external> {
    <https://d-nb.info/gnd/1018674667> gndo:dateOfDeath '1981' .
  }
} WHERE {};

# Remove Person type if group is present
DELETE {
  ?subject a crm:E21_Person .
} WHERE {
  ?subject a crm:E21_Person, crm:E74_Group .
};

# Remove data on parent record of entire Itten archive
DELETE {
  ?subject ?predicate ?object .
} WHERE {
  {
    BIND(<https://resource.jila.zb.uzh.ch/collection/jila-859afc5815a047a58569cee9db123f30> AS ?subject)
    ?subject ?predicate ?object .
  } UNION {
    BIND(<https://resource.jila.zb.uzh.ch/collection/jila-859afc5815a047a58569cee9db123f30> AS ?object)
    ?subject ?predicate ?object .
  }
}